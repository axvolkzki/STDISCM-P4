services:
  # Shared PostgreSQL Database
  db:
    image: postgres:15
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Authentication Service
  auth_service:
    build: ./backend/authentication
    volumes:
      - ./backend/authentication:/app
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RAILS_ENV: development
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"

  # Frontend
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/rails
    ports:
      - "3000:3000"
    env_file: .env
    environment:
      RAILS_ENV: development
      BUNDLE_PATH: /usr/local/bundle
      AUTH_SERVICE_URL: http://auth_service:3000  # For frontend to call auth service
      VIEW_GRADES_IP: http://view_grades:3000
      UPLOAD_GRADES_IP: http://upload_grades:3000
      UPLOAD_GRADES_EXTERNAL_IP: http://127.0.0.1:3005
    depends_on:
      - auth_service
    networks:
      - app-network
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"

  # view_grades
  view_grades:
    build: ./backend/view_grades
    volumes:
      - ./backend/view_grades:/app
    ports:
      - "3004:3000"
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RAILS_ENV: development
      AUTH_SERVICE_URL: http://auth_service:3000  # For view_grades to call auth service
    depends_on:
      - auth_service
    networks:
      - app-network
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"



  # upload_grades
  upload_grades:
    build: ./backend/upload_grades
    volumes:
      - ./backend/upload_grades:/app
    ports:
      - "3005:3000"
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RAILS_ENV: development
      AUTH_SERVICE_URL: http://auth_service:3000  # For view_grades to call auth service
    depends_on:
      - auth_service
    networks:
      - app-network
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"


  # view_courses
  view_courses:
    build: ./backend/view_courses
    volumes:
      - ./backend/view_courses:/app
    ports:
      - "3002:3000"
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RAILS_ENV: development
      AUTH_SERVICE_URL: http://auth_service:3000  # For view_courses to call auth service
    depends_on:
      - auth_service
    networks:
      - app-network
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"

  # enroll_courses
  enroll_courses:
    build: ./backend/enroll_courses
    volumes:
      - ./backend/enroll_courses:/app
    ports:
      - "3003:3000"
    env_file: .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RAILS_ENV: development
      AUTH_SERVICE_URL: http://auth_service:3000  # For enroll_courses to call auth service
    depends_on:
      - auth_service
    networks:
      - app-network
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: